CREATE SEQUENCE seq_salas START WITH 1 INCREMENT BY 1;

CREATE TABLE salas (
    idsala int NOT NULL,
    numsala int NOT NULL,
    PRIMARY KEY (idsala)
);

-- Trigger para auto incrementar idsala
CREATE OR REPLACE TRIGGER trg_salas_bi
BEFORE INSERT ON salas
FOR EACH ROW
BEGIN
    SELECT seq_salas.NEXTVAL INTO :NEW.idsala FROM dual;
END;
/

-- Criando sequência para idprofissional
CREATE SEQUENCE seq_profissionais START WITH 1 INCREMENT BY 1;

CREATE TABLE profissionais (
    idprofissional int NOT NULL,
    crp varchar(20) NOT NULL,
    nome varchar(100) NOT NULL,
    contato varchar(100) NOT NULL,
    PRIMARY KEY (idprofissional)
);

-- Trigger para auto incrementar idprofissional
CREATE OR REPLACE TRIGGER trg_profissionais_bi
BEFORE INSERT ON profissionais
FOR EACH ROW
BEGIN
    SELECT seq_profissionais.NEXTVAL INTO :NEW.idprofissional FROM dual;
END;
/

-- Criando sequência para iddisponibilidade
CREATE SEQUENCE seq_disponibilidades START WITH 1 INCREMENT BY 1;

CREATE TABLE disponibilidades (
    iddisponibilidade int NOT NULL,
    idprofissional int NOT NULL,
    horarioinicio timestamp NOT NULL,
    horariofim timestamp NOT NULL,
    PRIMARY KEY (iddisponibilidade)
);

-- Trigger para auto incrementar iddisponibilidade
CREATE OR REPLACE TRIGGER trg_disponibilidades_bi
BEFORE INSERT ON disponibilidades
FOR EACH ROW
BEGIN
    SELECT seq_disponibilidades.NEXTVAL INTO :NEW.iddisponibilidade FROM dual;
END;
/

-- Criando sequência para idpaciente
CREATE SEQUENCE seq_pacientes START WITH 1 INCREMENT BY 1;

CREATE TABLE pacientes (
    idpaciente int NOT NULL,
    nome varchar(100) NOT NULL,
    email varchar(100) NOT NULL,
    contato varchar(100) NOT NULL,
    documento varchar(20) NOT NULL,
    datanascimento date NOT NULL,
    psiFixo int NULL,
    PRIMARY KEY (idpaciente)
);

-- Trigger para auto incrementar idpaciente
CREATE OR REPLACE TRIGGER trg_pacientes_bi
BEFORE INSERT ON pacientes
FOR EACH ROW
BEGIN
    SELECT seq_pacientes.NEXTVAL INTO :NEW.idpaciente FROM dual;
END;
/

-- Criando sequência para idagendamento
CREATE SEQUENCE seq_agendamentos START WITH 1 INCREMENT BY 1;

CREATE TABLE agendamentos (
    idagendamento int NOT NULL,
    dataconsulta date NOT NULL UNIQUE,
    horaconsulta timestamp NOT NULL UNIQUE,
    idsala int NOT NULL,
    idprofissional int NOT NULL,
    idpaciente int NOT NULL,
    PRIMARY KEY (idagendamento)
);

-- Trigger para auto incrementar idagendamento
CREATE OR REPLACE TRIGGER trg_agendamentos_bi
BEFORE INSERT ON agendamentos
FOR EACH ROW
BEGIN
    SELECT seq_agendamentos.NEXTVAL INTO :NEW.idagendamento FROM dual;
END;
/
2. Adicionando as chaves estrangeiras (Foreign Keys):
sql
Copiar código
-- Chave estrangeira entre disponibilidades e profissionais
ALTER TABLE disponibilidades 
ADD CONSTRAINT disponibilidades_fk1 
FOREIGN KEY (idprofissional) REFERENCES profissionais(idprofissional);

-- Chave estrangeira entre pacientes e profissionais (psiFixo)
ALTER TABLE pacientes 
ADD CONSTRAINT pacientes_fk6 
FOREIGN KEY (psiFixo) REFERENCES profissionais(idprofissional);

-- Chave estrangeira entre agendamentos e salas
ALTER TABLE agendamentos 
ADD CONSTRAINT agendamentos_fk3 
FOREIGN KEY (idsala) REFERENCES salas(idsala);

-- Chave estrangeira entre agendamentos e profissionais
ALTER TABLE agendamentos 
ADD CONSTRAINT agendamentos_fk4 
FOREIGN KEY (idprofissional) REFERENCES profissionais(idprofissional);

-- Chave estrangeira entre agendamentos e pacientes
ALTER TABLE agendamentos 
ADD CONSTRAINT agendamentos_fk5 
FOREIGN KEY (idpaciente) REFERENCES pacientes(idpaciente);

SELECT * FROM salas;

INSERT INTO salas (numsala) 
VALUES (101);
INSERT INTO profissionais (crp, nome, contato) 
VALUES ('123456', 'Dr. José Silva', 'dr.jose@example.com');
INSERT INTO disponibilidades (idprofissional, horarioinicio, horariofim) 
VALUES (21, TO_TIMESTAMP('2024-08-22 08:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2024-08-22 12:00:00', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO pacientes (nome, email, contato, documento, datanascimento, psiFixo) 
VALUES ('Maria Souza', 'maria.souza@example.com', '555-1234', '98765432100', TO_DATE('1990-01-01', 'YYYY-MM-DD'), 21);
INSERT INTO agendamentos (dataconsulta, horaconsulta, idsala, idprofissional, idpaciente) 
VALUES (TO_DATE('2024-09-01', 'YYYY-MM-DD'), TO_TIMESTAMP('2024-09-01 10:00:00', 'YYYY-MM-DD HH24:MI:SS'), 21, 21, 42);

SELECT * FROM salas;
SELECT * FROM profissionais;
SELECT * FROM disponibilidades;
SELECT * FROM pacientes;
SELECT * FROM agendamentos;


/*
--So pra arrumar as cagada caso necessario--
drop table salas;
drop table profissionais;
drop table disponibilidades;
drop table pacientes;
drop table agendamentos;

DELETE FROM agendamentos WHERE idagendamento = 1;

-- Remover dados da tabela disponibilidades
DELETE FROM disponibilidades WHERE iddisponibilidade = 1;

-- Remover dados da tabela pacientes
DELETE FROM pacientes WHERE idpaciente = 1;

-- Remover dados da tabela profissionais
DELETE FROM profissionais WHERE idprofissional = 1;

-- Remover dados da tabela salas
DELETE FROM salas WHERE idsala = 1; 
*/
